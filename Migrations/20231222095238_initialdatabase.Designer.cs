// <auto-generated />
using System;
using Draft15.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Draft15.Migrations
{
    [DbContext(typeof(Draft15Context))]
    [Migration("20231222095238_initialdatabase")]
    partial class initialdatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AppData.Assignment", b =>
                {
                    b.Property<int>("assignment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("assignment_id"));

                    b.Property<string>("assignment_description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("assignment_title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("attemp")
                        .HasColumnType("integer");

                    b.Property<int>("course_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("due_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("assignment_id");

                    b.ToTable("Assignment");
                });

            modelBuilder.Entity("AppData.Content", b =>
                {
                    b.Property<int>("content_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("content_id"));

                    b.Property<string>("content_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("course_id")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isFinish")
                        .HasColumnType("boolean");

                    b.Property<int?>("prerequisitecontent_id")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("content_id");

                    b.HasIndex("prerequisitecontent_id");

                    b.ToTable("Content");
                });

            modelBuilder.Entity("AppData.File", b =>
                {
                    b.Property<int>("file_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("file_id"));

                    b.Property<int?>("assignment_id")
                        .HasColumnType("integer");

                    b.Property<int?>("content_id")
                        .HasColumnType("integer");

                    b.Property<string>("file_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("file_path")
                        .HasColumnType("text");

                    b.Property<string>("file_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("submission_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("uploadDate")
                        .HasColumnType("timestamp without timezone");

                    b.HasKey("file_id");

                    b.HasIndex("assignment_id");

                    b.HasIndex("content_id");

                    b.HasIndex("submission_id");

                    b.ToTable("File");
                });

            modelBuilder.Entity("AppData.Submission", b =>
                {
                    b.Property<int>("submission_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("submission_id"));

                    b.Property<int>("assignment_id")
                        .HasColumnType("integer");

                    b.Property<string>("comment")
                        .HasColumnType("text");

                    b.Property<int?>("grade")
                        .HasColumnType("integer");

                    b.Property<DateTime>("submission_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("submission_id");

                    b.HasIndex("assignment_id");

                    b.ToTable("Submission");
                });

            modelBuilder.Entity("AppData.Content", b =>
                {
                    b.HasOne("AppData.Content", "prerequisite")
                        .WithMany()
                        .HasForeignKey("prerequisitecontent_id");

                    b.Navigation("prerequisite");
                });

            modelBuilder.Entity("AppData.File", b =>
                {
                    b.HasOne("AppData.Assignment", null)
                        .WithMany("files")
                        .HasForeignKey("assignment_id");

                    b.HasOne("AppData.Content", null)
                        .WithMany("files")
                        .HasForeignKey("content_id");

                    b.HasOne("AppData.Submission", null)
                        .WithMany("files")
                        .HasForeignKey("submission_id");
                });

            modelBuilder.Entity("AppData.Submission", b =>
                {
                    b.HasOne("AppData.Assignment", "assignment")
                        .WithMany("submissions")
                        .HasForeignKey("assignment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("assignment");
                });

            modelBuilder.Entity("AppData.Assignment", b =>
                {
                    b.Navigation("files");

                    b.Navigation("submissions");
                });

            modelBuilder.Entity("AppData.Content", b =>
                {
                    b.Navigation("files");
                });

            modelBuilder.Entity("AppData.Submission", b =>
                {
                    b.Navigation("files");
                });
#pragma warning restore 612, 618
        }
    }
}
